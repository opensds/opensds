// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package opensds;

// The dock service definition.
service Dock {
  // Create a volume
  rpc CreateVolume (DockRequest) returns (DockResponse) {}
  // Get a volume
  rpc GetVolume (DockRequest) returns (DockResponse) {}
  // Delete a volume
  rpc DeleteVolume (DockRequest) returns (DockResponse) {}
  // Create a volume attachment
  rpc CreateVolumeAttachment (DockRequest) returns (DockResponse) {}
  // Update a volume attachment
  rpc UpdateVolumeAttachment (DockRequest) returns (DockResponse) {}
  // Delete a volume attachment
  rpc DeleteVolumeAttachment (DockRequest) returns (DockResponse) {}
  // Create a volume snapshot
  rpc CreateVolumeSnapshot (DockRequest) returns (DockResponse) {}
  // Get a volume snapshot
  rpc GetVolumeSnapshot (DockRequest) returns (DockResponse) {}
  // Delete a volume snapshot
  rpc DeleteVolumeSnapshot (DockRequest) returns (DockResponse) {}
}

// The DockRequest message containing all properties of
// a request to dock service.
message DockRequest {
  string volumeId = 1;
  string volumeName = 2;
  string volumeDescription = 3;
  int64 volumeSize = 4;
  string attachmentId = 5;
  string attachmentName = 6;
  string attachmentDescription = 7;
  bool doLocalAttach = 8;
  bool multiPath = 9;
  string hostInfo = 10;
  string mountpoint = 11;
  string snapshotId = 12;
  string snapshotName = 13;
  string snapshotDescription = 14;  
  string dockInfo = 15;
  string poolId = 16;
  string profileId = 17;
}

// The DockResponse message containing all properties of
// resource response from dock service.
message DockResponse {
  string status = 1;
  string message = 2;
  string error = 3;
}
