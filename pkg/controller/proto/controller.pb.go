// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CreateVolumeOpts is a structure which indicates all required properties
// for creating a volume.
type CreateVolumeOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeOpts) Reset()         { *m = CreateVolumeOpts{} }
func (m *CreateVolumeOpts) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeOpts) ProtoMessage()    {}
func (*CreateVolumeOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{0}
}
func (m *CreateVolumeOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeOpts.Unmarshal(m, b)
}
func (m *CreateVolumeOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeOpts.Marshal(b, m, deterministic)
}
func (dst *CreateVolumeOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeOpts.Merge(dst, src)
}
func (m *CreateVolumeOpts) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeOpts.Size(m)
}
func (m *CreateVolumeOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeOpts.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeOpts proto.InternalMessageInfo

func (m *CreateVolumeOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVolumeOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// DeleteVolumeOpts is a structure which indicates all required properties
// for deleting a volume.
type DeleteVolumeOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVolumeOpts) Reset()         { *m = DeleteVolumeOpts{} }
func (m *DeleteVolumeOpts) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeOpts) ProtoMessage()    {}
func (*DeleteVolumeOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{1}
}
func (m *DeleteVolumeOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeOpts.Unmarshal(m, b)
}
func (m *DeleteVolumeOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeOpts.Marshal(b, m, deterministic)
}
func (dst *DeleteVolumeOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeOpts.Merge(dst, src)
}
func (m *DeleteVolumeOpts) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeOpts.Size(m)
}
func (m *DeleteVolumeOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeOpts.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeOpts proto.InternalMessageInfo

func (m *DeleteVolumeOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVolumeOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// ExtendVolumeOpts is a structure which indicates all required properties
// for Extending a volume.
type ExtendVolumeOpts struct {
	// The id of volume, required.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The message of request, required.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtendVolumeOpts) Reset()         { *m = ExtendVolumeOpts{} }
func (m *ExtendVolumeOpts) String() string { return proto.CompactTextString(m) }
func (*ExtendVolumeOpts) ProtoMessage()    {}
func (*ExtendVolumeOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{2}
}
func (m *ExtendVolumeOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtendVolumeOpts.Unmarshal(m, b)
}
func (m *ExtendVolumeOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtendVolumeOpts.Marshal(b, m, deterministic)
}
func (dst *ExtendVolumeOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendVolumeOpts.Merge(dst, src)
}
func (m *ExtendVolumeOpts) XXX_Size() int {
	return xxx_messageInfo_ExtendVolumeOpts.Size(m)
}
func (m *ExtendVolumeOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendVolumeOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendVolumeOpts proto.InternalMessageInfo

func (m *ExtendVolumeOpts) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExtendVolumeOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ExtendVolumeOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// CreateVolumeAttachmentOpts is a structure which indicates all required properties
// for creating a volume attachment.
type CreateVolumeAttachmentOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeAttachmentOpts) Reset()         { *m = CreateVolumeAttachmentOpts{} }
func (m *CreateVolumeAttachmentOpts) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeAttachmentOpts) ProtoMessage()    {}
func (*CreateVolumeAttachmentOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{3}
}
func (m *CreateVolumeAttachmentOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeAttachmentOpts.Unmarshal(m, b)
}
func (m *CreateVolumeAttachmentOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeAttachmentOpts.Marshal(b, m, deterministic)
}
func (dst *CreateVolumeAttachmentOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeAttachmentOpts.Merge(dst, src)
}
func (m *CreateVolumeAttachmentOpts) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeAttachmentOpts.Size(m)
}
func (m *CreateVolumeAttachmentOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeAttachmentOpts.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeAttachmentOpts proto.InternalMessageInfo

func (m *CreateVolumeAttachmentOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVolumeAttachmentOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// CreateVolumeAttachmentOpts is a structure which indicates all required properties
// for deleting a volume attachment.
type DeleteVolumeAttachmentOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVolumeAttachmentOpts) Reset()         { *m = DeleteVolumeAttachmentOpts{} }
func (m *DeleteVolumeAttachmentOpts) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeAttachmentOpts) ProtoMessage()    {}
func (*DeleteVolumeAttachmentOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{4}
}
func (m *DeleteVolumeAttachmentOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeAttachmentOpts.Unmarshal(m, b)
}
func (m *DeleteVolumeAttachmentOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeAttachmentOpts.Marshal(b, m, deterministic)
}
func (dst *DeleteVolumeAttachmentOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeAttachmentOpts.Merge(dst, src)
}
func (m *DeleteVolumeAttachmentOpts) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeAttachmentOpts.Size(m)
}
func (m *DeleteVolumeAttachmentOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeAttachmentOpts.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeAttachmentOpts proto.InternalMessageInfo

func (m *DeleteVolumeAttachmentOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVolumeAttachmentOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// CreateVolumeSnapshotOpts is a structure which indicates all required properties
// for creating a volume snapshot.
type CreateVolumeSnapshotOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeSnapshotOpts) Reset()         { *m = CreateVolumeSnapshotOpts{} }
func (m *CreateVolumeSnapshotOpts) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeSnapshotOpts) ProtoMessage()    {}
func (*CreateVolumeSnapshotOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{5}
}
func (m *CreateVolumeSnapshotOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeSnapshotOpts.Unmarshal(m, b)
}
func (m *CreateVolumeSnapshotOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeSnapshotOpts.Marshal(b, m, deterministic)
}
func (dst *CreateVolumeSnapshotOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeSnapshotOpts.Merge(dst, src)
}
func (m *CreateVolumeSnapshotOpts) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeSnapshotOpts.Size(m)
}
func (m *CreateVolumeSnapshotOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeSnapshotOpts.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeSnapshotOpts proto.InternalMessageInfo

func (m *CreateVolumeSnapshotOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVolumeSnapshotOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// DeleteVolumeSnapshotOpts is a structure which indicates all required properties
// for deleting a volume snapshot.
type DeleteVolumeSnapshotOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVolumeSnapshotOpts) Reset()         { *m = DeleteVolumeSnapshotOpts{} }
func (m *DeleteVolumeSnapshotOpts) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeSnapshotOpts) ProtoMessage()    {}
func (*DeleteVolumeSnapshotOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{6}
}
func (m *DeleteVolumeSnapshotOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeSnapshotOpts.Unmarshal(m, b)
}
func (m *DeleteVolumeSnapshotOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeSnapshotOpts.Marshal(b, m, deterministic)
}
func (dst *DeleteVolumeSnapshotOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeSnapshotOpts.Merge(dst, src)
}
func (m *DeleteVolumeSnapshotOpts) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeSnapshotOpts.Size(m)
}
func (m *DeleteVolumeSnapshotOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeSnapshotOpts.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeSnapshotOpts proto.InternalMessageInfo

func (m *DeleteVolumeSnapshotOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVolumeSnapshotOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// CreateReplicationOpts is a structure which indicates all required properties
// for creating a replication.
// NOTE: Need to figure out how to handle more than 2 sites.
type CreateReplicationOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReplicationOpts) Reset()         { *m = CreateReplicationOpts{} }
func (m *CreateReplicationOpts) String() string { return proto.CompactTextString(m) }
func (*CreateReplicationOpts) ProtoMessage()    {}
func (*CreateReplicationOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{7}
}
func (m *CreateReplicationOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReplicationOpts.Unmarshal(m, b)
}
func (m *CreateReplicationOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReplicationOpts.Marshal(b, m, deterministic)
}
func (dst *CreateReplicationOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReplicationOpts.Merge(dst, src)
}
func (m *CreateReplicationOpts) XXX_Size() int {
	return xxx_messageInfo_CreateReplicationOpts.Size(m)
}
func (m *CreateReplicationOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReplicationOpts.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReplicationOpts proto.InternalMessageInfo

func (m *CreateReplicationOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateReplicationOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// Delete ReplicationOpts is a structure which indicates all required properties
// for deleting a replication.
// NOTE: Need to figure out how to handle more than 2 sites.
type DeleteReplicationOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReplicationOpts) Reset()         { *m = DeleteReplicationOpts{} }
func (m *DeleteReplicationOpts) String() string { return proto.CompactTextString(m) }
func (*DeleteReplicationOpts) ProtoMessage()    {}
func (*DeleteReplicationOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{8}
}
func (m *DeleteReplicationOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReplicationOpts.Unmarshal(m, b)
}
func (m *DeleteReplicationOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReplicationOpts.Marshal(b, m, deterministic)
}
func (dst *DeleteReplicationOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReplicationOpts.Merge(dst, src)
}
func (m *DeleteReplicationOpts) XXX_Size() int {
	return xxx_messageInfo_DeleteReplicationOpts.Size(m)
}
func (m *DeleteReplicationOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReplicationOpts.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReplicationOpts proto.InternalMessageInfo

func (m *DeleteReplicationOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteReplicationOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// Delete ReplicationOpts is a structure which indicates all required properties
type EnableReplicationOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableReplicationOpts) Reset()         { *m = EnableReplicationOpts{} }
func (m *EnableReplicationOpts) String() string { return proto.CompactTextString(m) }
func (*EnableReplicationOpts) ProtoMessage()    {}
func (*EnableReplicationOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{9}
}
func (m *EnableReplicationOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableReplicationOpts.Unmarshal(m, b)
}
func (m *EnableReplicationOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableReplicationOpts.Marshal(b, m, deterministic)
}
func (dst *EnableReplicationOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableReplicationOpts.Merge(dst, src)
}
func (m *EnableReplicationOpts) XXX_Size() int {
	return xxx_messageInfo_EnableReplicationOpts.Size(m)
}
func (m *EnableReplicationOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableReplicationOpts.DiscardUnknown(m)
}

var xxx_messageInfo_EnableReplicationOpts proto.InternalMessageInfo

func (m *EnableReplicationOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *EnableReplicationOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// Delete ReplicationOpts is a structure which indicates all required properties
type DisableReplicationOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableReplicationOpts) Reset()         { *m = DisableReplicationOpts{} }
func (m *DisableReplicationOpts) String() string { return proto.CompactTextString(m) }
func (*DisableReplicationOpts) ProtoMessage()    {}
func (*DisableReplicationOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{10}
}
func (m *DisableReplicationOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableReplicationOpts.Unmarshal(m, b)
}
func (m *DisableReplicationOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableReplicationOpts.Marshal(b, m, deterministic)
}
func (dst *DisableReplicationOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableReplicationOpts.Merge(dst, src)
}
func (m *DisableReplicationOpts) XXX_Size() int {
	return xxx_messageInfo_DisableReplicationOpts.Size(m)
}
func (m *DisableReplicationOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableReplicationOpts.DiscardUnknown(m)
}

var xxx_messageInfo_DisableReplicationOpts proto.InternalMessageInfo

func (m *DisableReplicationOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DisableReplicationOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// Delete ReplicationOpts is a structure which indicates all required properties
type FailoverReplicationOpts struct {
	// The message of request, required.
	Message         string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	FailoverMessage string `protobuf:"bytes,2,opt,name=failoverMessage,proto3" json:"failoverMessage,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailoverReplicationOpts) Reset()         { *m = FailoverReplicationOpts{} }
func (m *FailoverReplicationOpts) String() string { return proto.CompactTextString(m) }
func (*FailoverReplicationOpts) ProtoMessage()    {}
func (*FailoverReplicationOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{11}
}
func (m *FailoverReplicationOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailoverReplicationOpts.Unmarshal(m, b)
}
func (m *FailoverReplicationOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailoverReplicationOpts.Marshal(b, m, deterministic)
}
func (dst *FailoverReplicationOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailoverReplicationOpts.Merge(dst, src)
}
func (m *FailoverReplicationOpts) XXX_Size() int {
	return xxx_messageInfo_FailoverReplicationOpts.Size(m)
}
func (m *FailoverReplicationOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_FailoverReplicationOpts.DiscardUnknown(m)
}

var xxx_messageInfo_FailoverReplicationOpts proto.InternalMessageInfo

func (m *FailoverReplicationOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *FailoverReplicationOpts) GetFailoverMessage() string {
	if m != nil {
		return m.FailoverMessage
	}
	return ""
}

func (m *FailoverReplicationOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

// CreateVolumeGroupOpts is a structure which indicates all required
// properties for creating a volume group.
type CreateVolumeGroupOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVolumeGroupOpts) Reset()         { *m = CreateVolumeGroupOpts{} }
func (m *CreateVolumeGroupOpts) String() string { return proto.CompactTextString(m) }
func (*CreateVolumeGroupOpts) ProtoMessage()    {}
func (*CreateVolumeGroupOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{12}
}
func (m *CreateVolumeGroupOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVolumeGroupOpts.Unmarshal(m, b)
}
func (m *CreateVolumeGroupOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVolumeGroupOpts.Marshal(b, m, deterministic)
}
func (dst *CreateVolumeGroupOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVolumeGroupOpts.Merge(dst, src)
}
func (m *CreateVolumeGroupOpts) XXX_Size() int {
	return xxx_messageInfo_CreateVolumeGroupOpts.Size(m)
}
func (m *CreateVolumeGroupOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVolumeGroupOpts.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVolumeGroupOpts proto.InternalMessageInfo

func (m *CreateVolumeGroupOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVolumeGroupOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

type UpdateVolumeGroupOpts struct {
	// The message of request, required.
	Message       string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	AddVolMessage []string `protobuf:"bytes,2,rep,name=addVolMessage,proto3" json:"addVolMessage,omitempty"`
	RmVolMessage  []string `protobuf:"bytes,3,rep,name=rmVolMessage,proto3" json:"rmVolMessage,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVolumeGroupOpts) Reset()         { *m = UpdateVolumeGroupOpts{} }
func (m *UpdateVolumeGroupOpts) String() string { return proto.CompactTextString(m) }
func (*UpdateVolumeGroupOpts) ProtoMessage()    {}
func (*UpdateVolumeGroupOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{13}
}
func (m *UpdateVolumeGroupOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVolumeGroupOpts.Unmarshal(m, b)
}
func (m *UpdateVolumeGroupOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVolumeGroupOpts.Marshal(b, m, deterministic)
}
func (dst *UpdateVolumeGroupOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVolumeGroupOpts.Merge(dst, src)
}
func (m *UpdateVolumeGroupOpts) XXX_Size() int {
	return xxx_messageInfo_UpdateVolumeGroupOpts.Size(m)
}
func (m *UpdateVolumeGroupOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVolumeGroupOpts.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVolumeGroupOpts proto.InternalMessageInfo

func (m *UpdateVolumeGroupOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateVolumeGroupOpts) GetAddVolMessage() []string {
	if m != nil {
		return m.AddVolMessage
	}
	return nil
}

func (m *UpdateVolumeGroupOpts) GetRmVolMessage() []string {
	if m != nil {
		return m.RmVolMessage
	}
	return nil
}

func (m *UpdateVolumeGroupOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

type DeleteVolumeGroupOpts struct {
	// The message of request, required.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The Context
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVolumeGroupOpts) Reset()         { *m = DeleteVolumeGroupOpts{} }
func (m *DeleteVolumeGroupOpts) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeGroupOpts) ProtoMessage()    {}
func (*DeleteVolumeGroupOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{14}
}
func (m *DeleteVolumeGroupOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeGroupOpts.Unmarshal(m, b)
}
func (m *DeleteVolumeGroupOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeGroupOpts.Marshal(b, m, deterministic)
}
func (dst *DeleteVolumeGroupOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeGroupOpts.Merge(dst, src)
}
func (m *DeleteVolumeGroupOpts) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeGroupOpts.Size(m)
}
func (m *DeleteVolumeGroupOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeGroupOpts.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeGroupOpts proto.InternalMessageInfo

func (m *DeleteVolumeGroupOpts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVolumeGroupOpts) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

type GenericResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericResponse) Reset()         { *m = GenericResponse{} }
func (m *GenericResponse) String() string { return proto.CompactTextString(m) }
func (*GenericResponse) ProtoMessage()    {}
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_479d4b827088cbae, []int{15}
}
func (m *GenericResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericResponse.Unmarshal(m, b)
}
func (m *GenericResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericResponse.Marshal(b, m, deterministic)
}
func (dst *GenericResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericResponse.Merge(dst, src)
}
func (m *GenericResponse) XXX_Size() int {
	return xxx_messageInfo_GenericResponse.Size(m)
}
func (m *GenericResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenericResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateVolumeOpts)(nil), "proto.CreateVolumeOpts")
	proto.RegisterType((*DeleteVolumeOpts)(nil), "proto.DeleteVolumeOpts")
	proto.RegisterType((*ExtendVolumeOpts)(nil), "proto.ExtendVolumeOpts")
	proto.RegisterType((*CreateVolumeAttachmentOpts)(nil), "proto.CreateVolumeAttachmentOpts")
	proto.RegisterType((*DeleteVolumeAttachmentOpts)(nil), "proto.DeleteVolumeAttachmentOpts")
	proto.RegisterType((*CreateVolumeSnapshotOpts)(nil), "proto.CreateVolumeSnapshotOpts")
	proto.RegisterType((*DeleteVolumeSnapshotOpts)(nil), "proto.DeleteVolumeSnapshotOpts")
	proto.RegisterType((*CreateReplicationOpts)(nil), "proto.CreateReplicationOpts")
	proto.RegisterType((*DeleteReplicationOpts)(nil), "proto.DeleteReplicationOpts")
	proto.RegisterType((*EnableReplicationOpts)(nil), "proto.EnableReplicationOpts")
	proto.RegisterType((*DisableReplicationOpts)(nil), "proto.DisableReplicationOpts")
	proto.RegisterType((*FailoverReplicationOpts)(nil), "proto.FailoverReplicationOpts")
	proto.RegisterType((*CreateVolumeGroupOpts)(nil), "proto.CreateVolumeGroupOpts")
	proto.RegisterType((*UpdateVolumeGroupOpts)(nil), "proto.UpdateVolumeGroupOpts")
	proto.RegisterType((*DeleteVolumeGroupOpts)(nil), "proto.DeleteVolumeGroupOpts")
	proto.RegisterType((*GenericResponse)(nil), "proto.GenericResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	// Create a volume
	CreateVolume(ctx context.Context, in *CreateVolumeOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Delete a volume
	DeleteVolume(ctx context.Context, in *DeleteVolumeOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Extend a volume
	ExtendVolume(ctx context.Context, in *ExtendVolumeOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Create a volume snapshot
	CreateVolumeSnapshot(ctx context.Context, in *CreateVolumeSnapshotOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Delete a volume snapshot
	DeleteVolumeSnapshot(ctx context.Context, in *DeleteVolumeSnapshotOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Create a volume attachment
	CreateVolumeAttachment(ctx context.Context, in *CreateVolumeAttachmentOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Delete a volume attachment
	DeleteVolumeAttachment(ctx context.Context, in *DeleteVolumeAttachmentOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Create a replication
	CreateReplication(ctx context.Context, in *CreateReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Delete a replication
	DeleteReplication(ctx context.Context, in *DeleteReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Enable a replication
	EnableReplication(ctx context.Context, in *EnableReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Disable a replication
	DisableReplication(ctx context.Context, in *DisableReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Failover a replication
	FailoverReplication(ctx context.Context, in *FailoverReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Create a volume group
	CreateVolumeGroup(ctx context.Context, in *CreateVolumeGroupOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Update volume group
	UpdateVolumeGroup(ctx context.Context, in *UpdateVolumeGroupOpts, opts ...grpc.CallOption) (*GenericResponse, error)
	// Delete volume group
	DeleteVolumeGroup(ctx context.Context, in *DeleteVolumeGroupOpts, opts ...grpc.CallOption) (*GenericResponse, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) CreateVolume(ctx context.Context, in *CreateVolumeOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/CreateVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DeleteVolume(ctx context.Context, in *DeleteVolumeOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DeleteVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ExtendVolume(ctx context.Context, in *ExtendVolumeOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/ExtendVolume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateVolumeSnapshot(ctx context.Context, in *CreateVolumeSnapshotOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/CreateVolumeSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DeleteVolumeSnapshot(ctx context.Context, in *DeleteVolumeSnapshotOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DeleteVolumeSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateVolumeAttachment(ctx context.Context, in *CreateVolumeAttachmentOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/CreateVolumeAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DeleteVolumeAttachment(ctx context.Context, in *DeleteVolumeAttachmentOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DeleteVolumeAttachment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateReplication(ctx context.Context, in *CreateReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/CreateReplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DeleteReplication(ctx context.Context, in *DeleteReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DeleteReplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) EnableReplication(ctx context.Context, in *EnableReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/EnableReplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DisableReplication(ctx context.Context, in *DisableReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DisableReplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) FailoverReplication(ctx context.Context, in *FailoverReplicationOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/FailoverReplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateVolumeGroup(ctx context.Context, in *CreateVolumeGroupOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/CreateVolumeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) UpdateVolumeGroup(ctx context.Context, in *UpdateVolumeGroupOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/UpdateVolumeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DeleteVolumeGroup(ctx context.Context, in *DeleteVolumeGroupOpts, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/proto.Controller/DeleteVolumeGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	// Create a volume
	CreateVolume(context.Context, *CreateVolumeOpts) (*GenericResponse, error)
	// Delete a volume
	DeleteVolume(context.Context, *DeleteVolumeOpts) (*GenericResponse, error)
	// Extend a volume
	ExtendVolume(context.Context, *ExtendVolumeOpts) (*GenericResponse, error)
	// Create a volume snapshot
	CreateVolumeSnapshot(context.Context, *CreateVolumeSnapshotOpts) (*GenericResponse, error)
	// Delete a volume snapshot
	DeleteVolumeSnapshot(context.Context, *DeleteVolumeSnapshotOpts) (*GenericResponse, error)
	// Create a volume attachment
	CreateVolumeAttachment(context.Context, *CreateVolumeAttachmentOpts) (*GenericResponse, error)
	// Delete a volume attachment
	DeleteVolumeAttachment(context.Context, *DeleteVolumeAttachmentOpts) (*GenericResponse, error)
	// Create a replication
	CreateReplication(context.Context, *CreateReplicationOpts) (*GenericResponse, error)
	// Delete a replication
	DeleteReplication(context.Context, *DeleteReplicationOpts) (*GenericResponse, error)
	// Enable a replication
	EnableReplication(context.Context, *EnableReplicationOpts) (*GenericResponse, error)
	// Disable a replication
	DisableReplication(context.Context, *DisableReplicationOpts) (*GenericResponse, error)
	// Failover a replication
	FailoverReplication(context.Context, *FailoverReplicationOpts) (*GenericResponse, error)
	// Create a volume group
	CreateVolumeGroup(context.Context, *CreateVolumeGroupOpts) (*GenericResponse, error)
	// Update volume group
	UpdateVolumeGroup(context.Context, *UpdateVolumeGroupOpts) (*GenericResponse, error)
	// Delete volume group
	DeleteVolumeGroup(context.Context, *DeleteVolumeGroupOpts) (*GenericResponse, error)
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_CreateVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/CreateVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateVolume(ctx, req.(*CreateVolumeOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DeleteVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVolumeOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DeleteVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DeleteVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DeleteVolume(ctx, req.(*DeleteVolumeOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ExtendVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExtendVolumeOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ExtendVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/ExtendVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ExtendVolume(ctx, req.(*ExtendVolumeOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateVolumeSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeSnapshotOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateVolumeSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/CreateVolumeSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateVolumeSnapshot(ctx, req.(*CreateVolumeSnapshotOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DeleteVolumeSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVolumeSnapshotOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DeleteVolumeSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DeleteVolumeSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DeleteVolumeSnapshot(ctx, req.(*DeleteVolumeSnapshotOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateVolumeAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeAttachmentOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateVolumeAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/CreateVolumeAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateVolumeAttachment(ctx, req.(*CreateVolumeAttachmentOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DeleteVolumeAttachment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVolumeAttachmentOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DeleteVolumeAttachment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DeleteVolumeAttachment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DeleteVolumeAttachment(ctx, req.(*DeleteVolumeAttachmentOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateReplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReplicationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateReplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/CreateReplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateReplication(ctx, req.(*CreateReplicationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DeleteReplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReplicationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DeleteReplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DeleteReplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DeleteReplication(ctx, req.(*DeleteReplicationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_EnableReplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableReplicationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).EnableReplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/EnableReplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).EnableReplication(ctx, req.(*EnableReplicationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DisableReplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableReplicationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DisableReplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DisableReplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DisableReplication(ctx, req.(*DisableReplicationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_FailoverReplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailoverReplicationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).FailoverReplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/FailoverReplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).FailoverReplication(ctx, req.(*FailoverReplicationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateVolumeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVolumeGroupOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateVolumeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/CreateVolumeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateVolumeGroup(ctx, req.(*CreateVolumeGroupOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_UpdateVolumeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVolumeGroupOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).UpdateVolumeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/UpdateVolumeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).UpdateVolumeGroup(ctx, req.(*UpdateVolumeGroupOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DeleteVolumeGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVolumeGroupOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DeleteVolumeGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Controller/DeleteVolumeGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DeleteVolumeGroup(ctx, req.(*DeleteVolumeGroupOpts))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVolume",
			Handler:    _Controller_CreateVolume_Handler,
		},
		{
			MethodName: "DeleteVolume",
			Handler:    _Controller_DeleteVolume_Handler,
		},
		{
			MethodName: "ExtendVolume",
			Handler:    _Controller_ExtendVolume_Handler,
		},
		{
			MethodName: "CreateVolumeSnapshot",
			Handler:    _Controller_CreateVolumeSnapshot_Handler,
		},
		{
			MethodName: "DeleteVolumeSnapshot",
			Handler:    _Controller_DeleteVolumeSnapshot_Handler,
		},
		{
			MethodName: "CreateVolumeAttachment",
			Handler:    _Controller_CreateVolumeAttachment_Handler,
		},
		{
			MethodName: "DeleteVolumeAttachment",
			Handler:    _Controller_DeleteVolumeAttachment_Handler,
		},
		{
			MethodName: "CreateReplication",
			Handler:    _Controller_CreateReplication_Handler,
		},
		{
			MethodName: "DeleteReplication",
			Handler:    _Controller_DeleteReplication_Handler,
		},
		{
			MethodName: "EnableReplication",
			Handler:    _Controller_EnableReplication_Handler,
		},
		{
			MethodName: "DisableReplication",
			Handler:    _Controller_DisableReplication_Handler,
		},
		{
			MethodName: "FailoverReplication",
			Handler:    _Controller_FailoverReplication_Handler,
		},
		{
			MethodName: "CreateVolumeGroup",
			Handler:    _Controller_CreateVolumeGroup_Handler,
		},
		{
			MethodName: "UpdateVolumeGroup",
			Handler:    _Controller_UpdateVolumeGroup_Handler,
		},
		{
			MethodName: "DeleteVolumeGroup",
			Handler:    _Controller_DeleteVolumeGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller.proto",
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_controller_479d4b827088cbae) }

var fileDescriptor_controller_479d4b827088cbae = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x69, 0xca, 0x87, 0x7a, 0x34, 0x58, 0x67, 0x58, 0x17, 0x55, 0x7c, 0x56, 0x5c, 0xf4,
	0x6a, 0x17, 0xf0, 0x04, 0xd3, 0xbe, 0x2e, 0xc6, 0xd8, 0x08, 0xda, 0xee, 0xbd, 0xe4, 0xc0, 0x22,
	0x25, 0x76, 0xe4, 0xb8, 0xd0, 0x17, 0x41, 0xbc, 0x2e, 0x4a, 0x93, 0x1a, 0xc7, 0x71, 0xac, 0xae,
	0xc9, 0x55, 0x65, 0x1f, 0xfb, 0xa7, 0xff, 0xe9, 0x71, 0x7e, 0x30, 0x0e, 0x39, 0x93, 0x82, 0x27,
	0x09, 0x8a, 0xc3, 0x4c, 0x70, 0xc9, 0xc9, 0x93, 0xd5, 0xcf, 0xec, 0x0c, 0xc6, 0xc7, 0x02, 0xa9,
	0xc4, 0x5b, 0x9e, 0x2c, 0x52, 0xbc, 0xca, 0x64, 0x4e, 0x7c, 0x78, 0x96, 0x62, 0x9e, 0xd3, 0x9f,
	0xe8, 0x0f, 0xde, 0x0f, 0xe6, 0xa3, 0x60, 0xbd, 0x2c, 0x2a, 0x05, 0x08, 0x97, 0xd2, 0xf7, 0xca,
	0x4a, 0xb5, 0x2c, 0x38, 0x27, 0x98, 0x60, 0x67, 0xce, 0x2d, 0x8c, 0x4f, 0x97, 0x12, 0x59, 0xa4,
	0x71, 0x5e, 0x80, 0x17, 0x47, 0x15, 0xc2, 0x8b, 0x23, 0x9d, 0xeb, 0xb5, 0x72, 0x87, 0x75, 0xee,
	0x35, 0x4c, 0xf5, 0x3e, 0x8f, 0xa4, 0xa4, 0xe1, 0x7d, 0x8a, 0x4c, 0x6e, 0x9d, 0xf4, 0x1a, 0xa6,
	0x7a, 0xc7, 0x3d, 0x10, 0xbf, 0x82, 0xaf, 0x67, 0xfc, 0xce, 0x68, 0x96, 0xdf, 0xf3, 0x4e, 0x3c,
	0x3d, 0x61, 0x67, 0xde, 0x05, 0xec, 0x97, 0xf9, 0x02, 0xcc, 0x92, 0x38, 0xa4, 0x32, 0xe6, 0xac,
	0x0b, 0xac, 0x0c, 0xd7, 0x13, 0xec, 0x94, 0xd1, 0xbb, 0xa4, 0x17, 0xd8, 0x17, 0x98, 0x9c, 0xc4,
	0x79, 0x5f, 0xb4, 0xdf, 0x70, 0x70, 0x46, 0xe3, 0x84, 0xff, 0x42, 0xb1, 0x39, 0x6e, 0x0e, 0xbb,
	0x3f, 0xaa, 0x4b, 0x97, 0xb5, 0x97, 0x6e, 0x6e, 0x3b, 0x5e, 0xbc, 0x9a, 0x56, 0x39, 0xfd, 0x73,
	0xc1, 0x17, 0xd9, 0xd6, 0x5d, 0xfc, 0x19, 0xc0, 0xfe, 0x4d, 0x16, 0x3d, 0x88, 0xf6, 0x11, 0x9e,
	0xd3, 0xa8, 0xf8, 0x8e, 0xff, 0xb7, 0x30, 0x9c, 0x8f, 0x82, 0xfa, 0x26, 0x99, 0xc1, 0x8e, 0x48,
	0xb5, 0x43, 0xc3, 0xd5, 0xa1, 0xda, 0x9e, 0x9e, 0xeb, 0x71, 0xcb, 0x2b, 0xea, 0xa3, 0xc9, 0x3d,
	0xd8, 0x3d, 0x47, 0x86, 0x22, 0x0e, 0x03, 0xcc, 0x33, 0xce, 0x72, 0xfc, 0xf4, 0x77, 0x04, 0x70,
	0xac, 0xd4, 0x49, 0x8e, 0x60, 0x47, 0xff, 0x4f, 0xc9, 0x41, 0x29, 0xd3, 0x43, 0x53, 0xa1, 0xd3,
	0x49, 0x55, 0x30, 0x78, 0xb3, 0x47, 0x05, 0x42, 0x4f, 0xac, 0x10, 0xa6, 0x3d, 0xdd, 0x08, 0xdd,
	0x91, 0x0a, 0x61, 0x8a, 0xd3, 0x81, 0xf8, 0x06, 0xaf, 0x6c, 0xaa, 0x21, 0xef, 0x2c, 0x0d, 0xe9,
	0xde, 0x70, 0x23, 0x6d, 0xb6, 0x51, 0xc8, 0x36, 0x15, 0x39, 0x90, 0x37, 0x30, 0xb1, 0x4b, 0x9b,
	0x7c, 0xb0, 0xe4, 0xac, 0x1b, 0xd8, 0x8d, 0xb5, 0x9b, 0x5b, 0x61, 0xdb, 0xc5, 0xee, 0xc0, 0x5e,
	0xc0, 0x5e, 0x43, 0x8f, 0xe4, 0x75, 0x2d, 0xa8, 0x61, 0x00, 0x37, 0xac, 0xa1, 0x47, 0x05, 0xb3,
	0x8a, 0xd3, 0x0d, 0x6b, 0xe8, 0x51, 0xc1, 0xac, 0xe2, 0x74, 0xc0, 0x2e, 0x81, 0x34, 0xf5, 0x48,
	0xde, 0xac, 0xa3, 0x59, 0xcd, 0xe9, 0xc0, 0x5d, 0xc1, 0x4b, 0x8b, 0x1f, 0xc9, 0xdb, 0xea, 0x42,
	0x8b, 0x3b, 0x37, 0x19, 0x83, 0xa6, 0x04, 0x63, 0x0c, 0x86, 0x2c, 0xdc, 0xb0, 0x86, 0xf6, 0x14,
	0xcc, 0x2a, 0xc4, 0x4d, 0x66, 0x6a, 0x83, 0x59, 0x35, 0xd6, 0x0e, 0xbb, 0x7b, 0xba, 0x2a, 0x7c,
	0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x40, 0x5d, 0xf7, 0xaa, 0xda, 0x09, 0x00, 0x00,
}
